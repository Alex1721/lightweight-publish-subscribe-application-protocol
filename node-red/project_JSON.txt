[{"id":"6504b5b6.a30884","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"57ea9767.92a3c","type":"tab","label":"Flow 2","disabled":false,"info":""},{"id":"b9230778.64d468","type":"tab","label":"Flow 3","disabled":false,"info":""},{"id":"8a9a8a88.ca1ed","type":"ui_base","z":"","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"2a9f8d4.c664ef2","type":"mqtt-broker","z":"","name":"","broker":"","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"92d0338e.f2208","type":"mqtt-broker","z":"","name":"thingspeak","broker":"mqtt3.thingspeak.com","port":"1883","clientid":"OAwfGRovOxchLR0GJho8CSU","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"deb8d118.4331e","type":"mqtt-broker","z":"","name":"Iot lab","broker":"mqtt3.thingspeak.com","port":"1883","clientid":"OAwfGRovOxchLR0GJho8CSU","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"d3fa694e.2660b","type":"mqtt-broker","z":"","name":"Thingspeak","broker":"mqtt3.thingspeak.com","port":"1883","clientid":"OAwfGRovOxchLR0GJho8CSU","usetls":false,"compatmode":false,"keepalive":"60","cleansession":false,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"f1a4c78b.7cfa88","type":"ui_tab","z":"","name":"Home","icon":"dashboard"},{"id":"44fcb118.b2e1b","type":"ui_group","z":"","name":"Default","tab":"f1a4c78b.7cfa88","disp":true,"width":"6","collapse":false},{"id":"a3149423.b042e","type":"mqtt-broker","z":"","name":"","broker":"","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"1d4cc268.9a29d6","type":"csv","z":"57ea9767.92a3c","name":"","sep":",","hdrin":true,"hdrout":"","multi":"one","ret":"\\n","temp":"","skip":"0","x":530,"y":220,"wires":[["635be00.3b0aba"]]},{"id":"6fd41669.4d649","type":"file in","z":"57ea9767.92a3c","name":"","filename":"/home/user/Downloads/challenge2023_3.csv","format":"utf8","chunk":false,"sendError":false,"x":230,"y":220,"wires":[["1d4cc268.9a29d6"]]},{"id":"57b6169b.9af978","type":"mqtt in","z":"57ea9767.92a3c","name":"","topic":"polimi/challenge_2/2023/id_code_generator","qos":"0","broker":"deb8d118.4331e","x":210,"y":40,"wires":[["c59bdc3.a18522"]]},{"id":"c59bdc3.a18522","type":"function","z":"57ea9767.92a3c","name":"Modulo","func":"// Initialisation.\nvar inputMessage = msg.payload;\nvar inputMessageLength = msg.payload.length;\n\n//To avoid unnessecary messages.\nif (inputMessageLength >= 44 && inputMessageLength <= 48 ) {\n    // Retrieve the generated ID.\n    let text = inputMessage.substring(42);\n    const myArray = text.split('\"}');\n    let id = parseInt(myArray[0]);\n    \n    // Starting the operations of modulo.\n    let personCode = 1768;\n    let sum = id + personCode;\n    var n = sum % 7711;\n    if(n === 0){\n        /* 7711 mod 7711 = 0. \n        * Packet 0 doesn't exist which means that we'll consider\n        * the mod operator strictly above 7711.\n        */\n        n = 7711;\n    }\n    \n    msg.payload = n;\n    \n    return msg;\n}","outputs":1,"noerr":0,"x":500,"y":40,"wires":[["47b9fad7.8d979c"]]},{"id":"635be00.3b0aba","type":"join","z":"57ea9767.92a3c","name":"Join_Mqtt_csv","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":720,"y":180,"wires":[["a3e7fbc.531f608"]]},{"id":"45788c28.8e11e4","type":"debug","z":"57ea9767.92a3c","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":940,"y":560,"wires":[]},{"id":"a3e7fbc.531f608","type":"function","z":"57ea9767.92a3c","name":"Packet Selector&Filter","func":"/* INITIALISATION. */\nconst array = msg.payload;\nvar id = 0;\nvar n = 0;\nvar object;\nvar str;\n\n// For generating the date. Look up to W3schools.com //\nconst date = new Date();\nconst month = date.getMonth() + 1;\nconst day = date.getDate();\nconst year = date.getFullYear();\n\n// Retrieve the previous id and n.\nfor(let i = 0; i < array.length; i++){\n    if (Number.isInteger(array[i])){\n        n = array[i];\n        // n = 2949;\n        // De-modulation.\n        id = n - 1768;\n        if (id < 0){\n            id = id + 7711;\n        }\n    }\n}\n\nconst timestamp = `${month}/${day}/${year}`;\nconst previousID = id.toString();\nstr = '{\"timestamp\":\"'+timestamp+'\",\"id\":\"'+previousID+'\",\"payload\":[';\n\n/* TREATMENT. */\n\n// Compare n with the respectful packet && sends back the publish message if it contains one.\nfor(let j = 0; j < array.length; j++){\n    object = array[j];\n    // n-1 because the first row in the csv file is the header column.\n    // if 'n=3651' then it corresponds to the '3651' row in the csv file.\n    if((n-1) == object['No.'] && object['Info'].includes(\"Publish Message\")){\n        // If the mesage section is null then sends nothing.\n        if(typeof object['Message'] === 'string'){\n            // Divide the message if it contains multiple Publish messages.\n            var text = object['Message'].split('},{');\n            for(let k = 0; k < text.length; k++){\n                if(text[k].charAt(0) !== '{'){\n                    // add the { to the first position.\n                    text[k] = \"{\" + text[k];\n                } \n                if(text[k].charAt(text[k].length - 1) !== '}'){\n                    // add the } to the last position.\n                    text[k] = text[k] + \"}\";\n                }\n                text[k] = str + text[k] + ']}';\n            }\n            msg.payload = text;\n            return msg;\n        } \n        else {\n            msg.payload = str + ']}'; // Sends an empty message.\n            return msg;\n        }\n    }\n}","outputs":1,"noerr":0,"x":970,"y":180,"wires":[["23e13b73.aceaac"]]},{"id":"23e13b73.aceaac","type":"split","z":"57ea9767.92a3c","name":"Message Splitter","splt":"},{","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":190,"y":380,"wires":[["44a8a91b.39693"]]},{"id":"44a8a91b.39693","type":"mqtt out","z":"57ea9767.92a3c","name":"","topic":"/polimi/iot2023/challenge2/10601768","qos":"","retain":"","broker":"deb8d118.4331e","x":780,"y":380,"wires":[]},{"id":"f651ae42.eaf43","type":"mqtt in","z":"57ea9767.92a3c","name":"","topic":"/polimi/iot2023/challenge2/10601768","qos":"0","broker":"deb8d118.4331e","x":180,"y":520,"wires":[["3381b8fa.c0d428","5ce8a11e.c843c8"]]},{"id":"5ce8a11e.c843c8","type":"function","z":"57ea9767.92a3c","name":"Filter Temperature Celsius CSV","func":"// Initialization.\nlet inputMessage = msg.payload;\nconst object = JSON.parse(inputMessage);\n\n// Filter only messages having payload with temperature in Celsius.\nif(object.payload.length !== 0){\n    if(object.payload[0]['unit'] === 'C'){\n        msg.payload = object.payload[0]\n        return msg;\n    }\n}","outputs":1,"noerr":0,"x":550,"y":600,"wires":[["e134df09.ea545","45788c28.8e11e4"]]},{"id":"e134df09.ea545","type":"csv","z":"57ea9767.92a3c","name":"","sep":",","hdrin":"","hdrout":true,"multi":"one","ret":"\\n","temp":"description,unit,type,range,lat,long","skip":"0","x":150,"y":740,"wires":[["a3c2dc6e.913e48"]]},{"id":"a3c2dc6e.913e48","type":"file","z":"57ea9767.92a3c","name":"","filename":"/home/user/Downloads/fileforchallenge.csv","appendNewline":true,"createDir":false,"overwriteFile":"false","x":510,"y":740,"wires":[[]]},{"id":"3381b8fa.c0d428","type":"function","z":"57ea9767.92a3c","name":"Filter Temperature Celsius Chart","func":"// Initialization.\nlet inputMessage = msg.payload;\nconst object = JSON.parse(inputMessage);\n\n// Filter only messages having payload with temperature in Celsius.\nif(object.payload.length !== 0){\n    if(object.payload[0]['unit'] === 'C'){\n        msg.payload = object.payload[0]['range'][1]\n        return msg;\n    }\n}","outputs":1,"noerr":0,"x":550,"y":520,"wires":[["53390bd1.551b84"]]},{"id":"47b9fad7.8d979c","type":"function","z":"57ea9767.92a3c","name":"Counter","func":"// Defines a counter with a get stored flow value.\nvar inc = flow.get(\"inc\") || 0 \n\n// Increment 1 to the counter\ninc++\n\n// Saves the value of counter in the flow variable\nflow.set(\"inc\",inc)\n\nif(inc <= 100){\n    return msg; \n}","outputs":1,"noerr":0,"x":660,"y":40,"wires":[["6fd41669.4d649","635be00.3b0aba","45788c28.8e11e4"]]},{"id":"53390bd1.551b84","type":"ui_chart","z":"57ea9767.92a3c","name":"Chart Temperature","group":"44fcb118.b2e1b","order":0,"width":"6","height":"6","label":"Temperature [C°]","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"step","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"x":960,"y":640,"wires":[[],[]]},{"id":"a8e762b5.038d38","type":"debug","z":"6504b5b6.a30884","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":940,"y":520,"wires":[]},{"id":"231af82.279af08","type":"tcp in","z":"6504b5b6.a30884","name":"","server":"client","host":"localhost","port":"60009","datamode":"stream","datatype":"utf8","newline":"\\n","topic":"","base64":false,"x":120,"y":300,"wires":[["c7398a15.1e944"]]},{"id":"c7398a15.1e944","type":"function","z":"6504b5b6.a30884","name":"Filter Temperature/Humidity/Luminosity","func":"let inputMessage = msg.payload;\nlet temperature;\nlet humidity;\nlet luminosity;\n\n\nif(inputMessage.charAt(0) === 'T'){\n    temperature = inputMessage.slice(-2);\n    msg.url = \"https://api.thingspeak.com/update?api_key=UFYHAZSXPY8GBO0Y&field1=\"+temperature;\n    //msg.payload = \"field1=\"+temperature+\"&STATUS=MQTTPUBLISH\"\n}else if(inputMessage.charAt(0) === 'H'){\n    humidity = inputMessage.slice(-2);\n    msg.url = \"https://api.thingspeak.com/update?api_key=UFYHAZSXPY8GBO0Y&field2=\"+humidity;\n    //msg.payload = \"field2=\"+humidity+\"&STATUS=MQTTPUBLISH\"\n}else if(inputMessage.charAt(0) === 'L'){\n    luminosity = inputMessage.slice(-2);\n    msg.url = \"https://api.thingspeak.com/update?api_key=UFYHAZSXPY8GBO0Y&field3=\"+luminosity;\n    //msg.payload = \"field3=\"+luminosity+\"&STATUS=MQTTPUBLISH\";\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":300,"wires":[["f3f62217.bd8498"]]},{"id":"9b23e197.5d09a8","type":"http request","z":"6504b5b6.a30884","name":"","method":"POST","ret":"txt","url":"","tls":"","x":940,"y":140,"wires":[[]]},{"id":"f3f62217.bd8498","type":"delay","z":"6504b5b6.a30884","name":"","pauseType":"rate","timeout":"15","timeoutUnits":"seconds","rate":"1","nbRateUnits":"25","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":690,"y":300,"wires":[["a8e762b5.038d38","9b23e197.5d09a8"]]},{"id":"8b57bf5e.b4fc2","type":"function","z":"b9230778.64d468","name":"Filter Temperature/Humidity/Luminosity","func":"let inputMessage = msg.payload;\nlet temperature;\nlet humidity;\nlet luminosity;\n\n\nif(inputMessage.charAt(0) === 'T'){\n    temperature = inputMessage.slice(-2);\n    msg.url = \"https://api.thingspeak.com/update?api_key=UFYHAZSXPY8GBO0Y&field1=\"+temperature;\n    //msg.payload = \"field1=\"+temperature+\"&STATUS=MQTTPUBLISH\"\n}else if(inputMessage.charAt(0) === 'H'){\n    humidity = inputMessage.slice(-2);\n    msg.url = \"https://api.thingspeak.com/update?api_key=UFYHAZSXPY8GBO0Y&field2=\"+humidity;\n    //msg.payload = \"field2=\"+humidity+\"&STATUS=MQTTPUBLISH\"\n}else if(inputMessage.charAt(0) === 'L'){\n    luminosity = inputMessage.slice(-2);\n    msg.url = \"https://api.thingspeak.com/update?api_key=UFYHAZSXPY8GBO0Y&field3=\"+luminosity;\n    //msg.payload = \"field3=\"+luminosity+\"&STATUS=MQTTPUBLISH\";\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":530,"y":220,"wires":[[]]}]